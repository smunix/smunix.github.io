https://www.mattkeeter.com/projects/constraints/ http://andrew.gibiansky.com/blog/verification/writing-a-sat-solver/ http://learnyouahaskell.com/chapters http://book.realworldhaskell.org/read/ http://chimera.labs.oreilly.com/books/1230000000929/index.html http://blog.jakuba.net/2014/07/22/building-monad-transformers-part-1.html http://blog.jakuba.net/2014/07/08/using-phantom-types-for-extra-safety.html http://blog.jakuba.net/2014/07/10/using-phantom-types-in-haskell-for-extra-safety-part-2.html http://blog.jakubarnold.cz/2014/07/14/lens-tutorial-introduction-part-1.html http://taylor.fausak.me/2014/03/04/haskeleton-a-haskell-project-skeleton/ http://www.cse.chalmers.se/~rjmh/QuickCheck/manual.html http://blog.jakuba.net/2014/07/20/mutable-state-in-haskell.html http://phaazon.blogspot.ca/2014/11/reactive-programming-through-explicit.html http://phaazon.blogspot.ca/2015/12/existential-quantification-and-gadt-in.html http://phaazon.blogspot.ca/2015/03/getting-into-netwire.html https://www.mattkeeter.com/projects/constraints/ -iC2 https://www.mattkeeter.com/projects/contours/ https://www.mattkeeter.com/projects/spacewar/ -iC2 https://speakerdeck.com/dmoverton/constraint-programming-in-haskell -iC2 -iC2 https://www.stackbuilders.com/tutorials/haskell/image-processing/ https://www.stackbuilders.com/tutorials/haskell/bdd-in-haskell-with-hspec/ http://www.cis.upenn.edu/~cis194/spring13/ https://www.stackbuilders.com/tutorials/haskell/ghc-optimization-and-fusion/ -iC1 http://cis.upenn.edu/~cis194/fall16/ -iC1 http://austinrochford.com/posts/2013-10-21-generalized-composition-in-haskell.html -iC1 http://www.kuznero.com/posts/haskell/2015-07-31-common-concurrency-abstractions-MVar-part-2.html -iC1 http://szeliski.org/Book/drafts/SzeliskiBook_20100903_draft.pdf -iC1 http://szeliski.org/Book/drafts/SzeliskiBook_20100903_draft.pdf -iC1 http://szeliski.org/Book/drafts/SzeliskiBook_20100903_draft.pdf -iC2 -iC1 https://hackhands.com/guide-lazy-evaluation-haskell/ -iC2 http://community.haskell.org/~simonmar/ -iC2 https://cdsmith.wordpress.com/2009/04/20/code-for-manipulating-graphs-in-haskell/ -iC2 http://www.well-typed.com/blog/2016/01/efficient-queues/ -iC2 https://www.schoolofhaskell.com/school/starting-with-haskell/libraries-and-frameworks/randoms -iC2 https://github.com/Lemmih/lhc/tree/master/papers -iC2 http://blog.ezyang.com/2013/05/anatomy-of-an-mvar-operation/ -iC2 "http://blog.ezyang.com/2010/06/the-haskell-preprocessor-hierarchy/ +* -r2" -iC2 "http://blog.ezyang.com/2010/06/the-haskell-preprocessor-hierarchy/ +*blog.ezyang.com/* -r2" -iC2 "http://blog.ezyang.com/2010/06/the-haskell-preprocessor-hierarchy/ -r1" -iC2 http://blog.ezyang.com/2010/06/the-haskell-preprocessor-hierarchy/ -iC2 "http://blog.ezyang.com/2010/06/the-haskell-preprocessor-hierarchy/ -r1" -iC2 https://www.schoolofhaskell.com/user/marcin/template-haskell-101 -iC2 https://www.schoolofhaskell.com/user/marcin/template-haskell-101 https://www.schoolofhaskell.com/user/marcin/quasiquotation-101 http://www.parsonsmatt.org/2015/11/15/template_haskell.html -iC2 -r2 -iC2 https://www.well-typed.com/blog/2014/10/quasi-quoting-dsls/ http://edsko.net/2013/05/09/brief-intro-to-quasi-quotation/ http://www.well-typed.com/blog/2015/05/parametricity/ http://www.well-typed.com/blog/2015/08/parametricity-part2/ http://www.well-typed.com/blog/2014/12/simple-smt-solver/ http://www.well-typed.com/blog/94/ http://www.well-typed.com/blog/71/ http://www.well-typed.com/blog/72/ http://www.well-typed.com/blog/73/ http://www.well-typed.com/blog/74/ http://edsko.net/2013/01/24/threadscope-0-2-2/ http://www.scs.stanford.edu/11au-cs240h/notes/ https://en.wikipedia.org/wiki/Hindleyâ€“Milner_type_system http://dev.stephendiehl.com/fun/ -r2 -iC2 http://dev.stephendiehl.com/hask/ -r2 -iC2 https://ocharles.org.uk/blog/ https://ghc.haskell.org/trac/ghc/wiki/Commentary/Compiler/GeneratedCode -r2 -iC2 https://www.schoolofhaskell.com/user/thoughtpolice/using-reflection -iC2 http://akgupta.ca/blog/2014/06/21/k-nn-algorithm-in-golang-and-haskell/ http://akgupta.ca/blog/2013/05/14/so-you-still-dont-understand-hindley-milner/ http://akgupta.ca/blog/2013/06/07/so-you-still-dont-understand-hindley-milner-part-2/ http://akgupta.ca/blog/2013/06/07/so-you-still-dont-understand-hindley-milner-part-3/ -r2 -iC2 https://www.schoolofhaskell.com/user/liyang/profunctors -r2 -iC2 http://blog.sigfpe.com/2011/07/profunctors-in-haskell.html -r1 -iC2 https://martingalemeasure.wordpress.com/2014/06/24/solving-the-15-puzzle-with-haskell-and-diagrams-10/ http://intolerable.me/lens-operators-intro/ http://stackoverflow.com/questions/25338856/what-is-the-basic-structure-in-netwire-5 http://stackoverflow.com/questions/14787797/full-example-for-netwire http://stackoverflow.com/questions/30992299/console-interactivity-in-netwire http://www.stephendiehl.com/posts/monads_machine_code.html http://www.stephendiehl.com/posts.html http://www.stephendiehl.com/llvm/ http://dev.stephendiehl.com/numpile/ http://dev.stephendiehl.com/fun/ http://dev.stephendiehl.com/hask/ -r2 -iC2 https://themonadreader.wordpress.com/page/ -r2 -iC2 git status -iC2 https://www.schoolofhaskell.com/user/snoyberg/library-documentation/vectorbuilder https://www.schoolofhaskell.com/user/snoyberg/library-documentation/conduit-overview https://www.schoolofhaskell.com/user/snoyberg/library-documentation/resourcet https://www.schoolofhaskell.com/user/snoyberg/general-haskell/advanced/evaluation-order-and-state-tokens https://www.schoolofhaskell.com/user/snoyberg/general-haskell/exceptions/catching-all-exceptions -r2 -iC2 https://github.com/ekmett/lens/wiki -r2 -iC2 https://robots.thoughtbot.com/applicative-options-parsing-in-haskell -r2 -iC2 -r2 -iC2 https://takenobu-hs.github.io/downloads/ -r2 -iC2 http://www.stephendiehl.com/posts/essential_compilers.html https://ghc.haskell.org/trac/ghc/wiki/ReadingList -r2 -iC2 http://kseo.github.io/posts/2016-12-11-how-to-read-arrow-combinators.html http://kseo.github.io/posts/2016-12-22-pattern-synonyms.html http://kseo.github.io/posts/2016-12-14-how-quick-check-generate-random-functions.html http://kseo.github.io/posts/2016-12-19-encoding-existentials.html http://kseo.github.io/posts/2014-01-28-calling-c-library-functions-dynamically-in-haskell.html http://kseo.github.io/posts/2014-01-30-implementing-union-find-in-haskell.html http://kseo.github.io/posts/2014-02-03-data-typeable-and-data-dynamic-in-haskell.html http://kseo.github.io/posts/2014-02-03-data-typeable-and-data-dynamic-in-haskell.html -r2 -iC2 http://ogldev.atspace.co.uk/ -r2 -iC2 https://www.fpcomplete.com/blog/2016/11/covariance-contravariance https://www.fpcomplete.com/blog/2016/03/efficient-binary-serialization -r2 -iC2 https://www.fpcomplete.com/blog/2016/11/comparative-concurrency-with-haskell https://www.schoolofhaskell.com/school/to-infinity-and-beyond/pick-of-the-week/type-families-and-pokemon -iC2 -r2 -iC2 -r2
File generated automatically on Fri, 30 Dec 2016 23:32:32, do NOT edit

To update a mirror, just launch httrack without any parameters
The existing cache will be used (and modified)
To have other options, retype all parameters and launch HTTrack
To continue an interrupted mirror, just launch httrack without any parameters

